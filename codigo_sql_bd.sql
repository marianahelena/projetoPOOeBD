-- MySQL Script generated by MySQL Workbench
-- Sun Jun  9 20:53:27 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estado` (
  `uf` VARCHAR(2) NOT NULL,
  `nome` VARCHAR(20) NOT NULL,
  `regiao` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`uf`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cidade` (
  `nome` VARCHAR(45) NOT NULL,
  `estado_uf` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`nome`, `estado_uf`),
  INDEX `fk_cidade_estado1_idx` (`estado_uf` ASC),
  CONSTRAINT `fk_cidade_estado1`
    FOREIGN KEY (`estado_uf`)
    REFERENCES `mydb`.`estado` (`uf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pessoa` (
  `email` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(10) NOT NULL,
  `nome` VARCHAR(30) NOT NULL,
  `sobrenome` VARCHAR(15) NOT NULL,
  `rua` VARCHAR(45) NOT NULL,
  `num` INT NOT NULL,
  `complemento` VARCHAR(20) NULL,
  `bairro` VARCHAR(20) NOT NULL,
  `cep` VARCHAR(9) NOT NULL,
  `nome_cidade` VARCHAR(45) NOT NULL,
  `uf_estado_cidade` VARCHAR(2) NOT NULL,
  `qtd_moradores` INT NOT NULL,
  PRIMARY KEY (`email`),
  INDEX `fk_pessoa_cidade_idx` (`nome_cidade` ASC, `uf_estado_cidade` ASC),
  CONSTRAINT `fk_pessoa_cidade`
    FOREIGN KEY (`nome_cidade`)
    REFERENCES `mydb`.`cidade` (`nome`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cod_end_postal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cod_end_postal` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cep1` VARCHAR(9) NOT NULL,
  `cep2` VARCHAR(9) NULL,
  `cep3` VARCHAR(9) NULL,
  `cidade_nome` VARCHAR(45) NOT NULL,
  `cidade_uf` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_cod_end_postal_cidade1_idx` (`cidade_nome` ASC, `cidade_uf` ASC),
  CONSTRAINT `fk_cod_end_postal_cidade1`
    FOREIGN KEY (`cidade_nome`)
    REFERENCES `mydb`.`cidade` (`nome`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`consumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`consumo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `pessoa_email` VARCHAR(45) NOT NULL,
  `volume1` FLOAT NULL,
  `custo1` FLOAT NULL,
  `volume2` FLOAT NULL,
  `custo2` FLOAT NULL,
  `volume3` FLOAT NULL,
  `custo3` FLOAT NULL,
  `volume4` FLOAT NULL,
  `custo4` FLOAT NULL,
  `volume5` FLOAT NULL,
  `custo5` FLOAT NULL,
  `volume6` FLOAT NULL,
  `custo6` FLOAT NULL,
  `volume7` FLOAT NULL,
  `custo7` FLOAT NULL,
  `volume8` FLOAT NULL,
  `custo8` FLOAT NULL,
  `volume9` FLOAT NULL,
  `custo9` FLOAT NULL,
  `volume10` FLOAT NULL,
  `custo10` FLOAT NULL,
  `volume11` FLOAT NULL,
  `custo11` FLOAT NULL,
  `volume12` FLOAT NULL,
  `custo12` FLOAT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_consumo_pessoa1_idx` (`pessoa_email` ASC),
  CONSTRAINT `fk_consumo_pessoa1`
    FOREIGN KEY (`pessoa_email`)
    REFERENCES `mydb`.`pessoa` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`lote_dispostivos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`lote_dispostivos` (
  `num` INT NOT NULL,
  `llocal` VARCHAR(45) NOT NULL,
  `ldata` DATE NOT NULL,
  PRIMARY KEY (`num`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estado_has_lote_dispostivos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estado_has_lote_dispostivos` (
  `estado_uf` VARCHAR(2) NOT NULL,
  `lote_dispostivos_num` INT NOT NULL,
  PRIMARY KEY (`estado_uf`, `lote_dispostivos_num`),
  INDEX `fk_estado_has_lote_dispostivos_lote_dispostivos1_idx` (`lote_dispostivos_num` ASC),
  INDEX `fk_estado_has_lote_dispostivos_estado1_idx` (`estado_uf` ASC),
  CONSTRAINT `fk_estado_has_lote_dispostivos_estado1`
    FOREIGN KEY (`estado_uf`)
    REFERENCES `mydb`.`estado` (`uf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_estado_has_lote_dispostivos_lote_dispostivos1`
    FOREIGN KEY (`lote_dispostivos_num`)
    REFERENCES `mydb`.`lote_dispostivos` (`num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

#DADOS RELACIONADOS A EMPRESA GERENCIADORA DO SISTEMA

#PREENCHER A TABELA ESTADO
#Região Norte: 7 estados
INSERT INTO estado VALUES('AM','Amazonas','Norte'),('RR','Roraima','Norte'),('AP','Amapá','Norte'),
('PA','Pará','Norte'),('TO','Tocantins','Norte'),('RO','Rondônia','Norte'),('AC','Acre','Norte');
#Região Nordeste: 9 estados
INSERT INTO estado VALUES('MA','Maranhão','Nordeste'),('PI','Piauí','Nordeste'),('CE','Ceará','Nordeste'),
('RN','Rio Grande do Norte','Nordeste'),('PE','Pernambuco','Nordeste'),('PB','Paraíba','Nordeste'),
('SE','Sergipe','Nordeste'),('AL','Alagoas','Nordeste'),('BA','Bahia','Nordeste');
#Região Centro-Oeste: 3 estados
INSERT INTO estado VALUES('MT','Mato Grosso','Centro-Oeste'),('MS','Mato Grosso do Sul','Centro-Oeste'),
('GO','Goiás','Centro-Oeste');
#Região Sudeste: 4 estados
INSERT INTO estado VALUES('MG','Minas Gerais','Sudeste'),('SP','São Paulo','Sudeste'),
('RJ','Rio de Janeiro','Sudeste'),('ES','Espírito Santo','Sudeste');
#Região Sul: 3 estados
INSERT INTO estado VALUES('PR','Paraná','Sul'),('RS','Rio Grande do Sul','Sul'),
('SC','Santa Catarina','Sul');

#PREENCHER A TABELA CIDADE (Com as cidades que a empresa atua)
INSERT INTO cidade(nome,estado_uf) VALUES('Santa Rita do Sapucaí','MG'),
										('São Paulo','SP'),
                                        ('Rio de Janeiro','RJ'),
                                        ('Brasília','DF'),
                                        ('Salvador','BA'),
                                        ('Fortaleza','CE'),
                                        ('Belo Horizonte','MG'),
                                        ('Manaus','AM'),
                                        ('Curitiba','PR'),
                                        ('Maceió','AL'),
                                        ('São Luís','MA'),
                                        ('Florianípolis','SC'),
                                        ('Campinas','SP');

INSERT INTO lote_dispostivos(num,llocal,ldata) values(1,'Manaus','2018-05-01'),
  (2,'Santa Rita do Sapucaí','2019-01-07'),(3,'São Paulo','2019-08-27');


#PREENCHER A TABELA CEP (Com as cidades que a empresa atua)
INSERT INTO cod_end_postal(cep1,cidade_nome,cidade_uf) VALUES('37540','Santa Rita do Sapucaí','MG');
INSERT INTO cod_end_postal(cep1,cep2,cep3,cidade_nome,cidade_uf) VALUES('03047-000','04180-112','04236-094','São Paulo','SP');
INSERT INTO cod_end_postal(cep1,cep2,cep3,cidade_nome,cidade_uf) VALUES('05407-002','20010-000','20010-050','Rio de Janeiro','RJ');




#FUNÇÃO QUE RETORNA CONSUMO DE ÁGUA EM UM ESTADO NO MÊS ANTERIOR
DELIMITER $$
CREATE FUNCTION consumo_estado(cod VARCHAR(2),num INT) RETURNS FLOAT DETERMINISTIC
BEGIN
DECLARE fat INT;
    IF num = 1 THEN 
RETURN (SELECT SUM(volume1) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=2 THEN
RETURN (SELECT SUM(volume2) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=3 THEN
RETURN (SELECT SUM(volume3) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=4 THEN
RETURN (SELECT SUM(volume4) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=5 THEN
RETURN (SELECT SUM(volume5) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=6 THEN
RETURN (SELECT SUM(volume6) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=7 THEN
RETURN (SELECT SUM(volume7) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=8 THEN
RETURN (SELECT SUM(volume8) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=9 THEN
RETURN (SELECT SUM(volume9) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=10 THEN
RETURN (SELECT SUM(volume10) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSEIF num=11 THEN
RETURN (SELECT SUM(volume11) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
ELSE 
RETURN (SELECT SUM(volume12) FROM consumo,pessoa WHERE pessoa_email=email AND cidade_uf=cod); 
END IF;   
END $$
DELIMITER ;

SELECT * FROM pessoa;